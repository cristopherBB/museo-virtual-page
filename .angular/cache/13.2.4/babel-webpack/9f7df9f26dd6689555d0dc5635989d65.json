{"ast":null,"code":"import { MAT_DIALOG_DATA } from '@angular/material/dialog';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/material/dialog\";\nimport * as i2 from \"../canvas_minimapa/canvas_minimapa.component\";\nimport * as i3 from \"@angular/forms\";\nimport * as i4 from \"@angular/common\";\nimport * as i5 from \"@angular/material/button\";\n\nfunction ModalMinimapComponent_option_8_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"option\", 10);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const item_r1 = ctx.$implicit;\n    i0.ɵɵproperty(\"value\", item_r1);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate(item_r1);\n  }\n}\n\nexport let ModalMinimapComponent = /*#__PURE__*/(() => {\n  class ModalMinimapComponent {\n    constructor(dialogRef, data) {\n      this.dialogRef = dialogRef;\n      this.data = data;\n      this.selected = \"Escena a navegar\";\n      this.tour = {\n        pins: [],\n        views: []\n      };\n      this.selectedPin = 0;\n      this.scenesAvailable = [];\n      this.oldSize = 0;\n      this.newSize = 0;\n    }\n\n    ngOnInit() {\n      this.img = this.data.minimapa;\n\n      if (this.data.tour_actual) {\n        this.tour = this.data.tour_actual.result;\n      }\n\n      this.oldSize = this.tour.pins.length;\n      this.scenesAvailable = this.data.escenas.filter(el => !this.tour.views.includes(el));\n    }\n\n    close() {\n      // verificamos el tamaño de los arreglos de pines para verificar si se agrego uno nuevo o no\n      this.newSize = this.tour.pins.length;\n\n      if (this.newSize > this.oldSize) {\n        this.tour.pins.pop();\n      }\n\n      this.dialogRef.close({\n        result: this.tour\n      });\n    }\n\n    aceptar() {\n      // verificamos el tamaño de los arreglos de pines para verificar si se agrego uno nuevo o no\n      this.newSize = this.tour.pins.length;\n\n      if (this.newSize > this.oldSize && !(this.selected === \"Escena a navegar\")) {\n        this.tour.views.push(this.selected);\n      }\n\n      if (this.newSize > this.oldSize && this.selected === \"Escena a navegar\") {\n        this.tour.pins.pop();\n      }\n\n      this.dialogRef.close({\n        result: this.tour\n      });\n    }\n\n  }\n\n  ModalMinimapComponent.ɵfac = function ModalMinimapComponent_Factory(t) {\n    return new (t || ModalMinimapComponent)(i0.ɵɵdirectiveInject(i1.MatDialogRef), i0.ɵɵdirectiveInject(MAT_DIALOG_DATA));\n  };\n\n  ModalMinimapComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: ModalMinimapComponent,\n    selectors: [[\"app-modal_minimap\"]],\n    decls: 14,\n    vars: 6,\n    consts: [[\"mat-dialog-title\", \"\", 2, \"text-align\", \"center\"], [\"mat-dialog-content\", \"\", 2, \"text-align\", \"center\"], [1, \"croquis-content\"], [1, \"croquis\", 3, \"pins\", \"selectedPin\", \"img\", \"place\"], [\"name\", \"miselect\", 3, \"ngModel\", \"ngModelChange\"], [\"disabled\", \"\"], [3, \"value\", 4, \"ngFor\", \"ngForOf\"], [\"mat-dialog-actions\", \"\", 2, \"justify-content\", \"center\"], [\"mat-button\", \"\", 3, \"click\"], [\"mat-button\", \"\", \"cdkFocusInitial\", \"\", 3, \"click\"], [3, \"value\"]],\n    template: function ModalMinimapComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"h1\", 0);\n        i0.ɵɵtext(1, \"Toca el minimapa para colocar el pin\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(2, \"div\", 1)(3, \"div\", 2);\n        i0.ɵɵelement(4, \"app-canvas_minimapa\", 3);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(5, \"select\", 4);\n        i0.ɵɵlistener(\"ngModelChange\", function ModalMinimapComponent_Template_select_ngModelChange_5_listener($event) {\n          return ctx.selected = $event;\n        });\n        i0.ɵɵelementStart(6, \"option\", 5);\n        i0.ɵɵtext(7, \" Escena a navegar \");\n        i0.ɵɵelementEnd();\n        i0.ɵɵtemplate(8, ModalMinimapComponent_option_8_Template, 2, 2, \"option\", 6);\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(9, \"div\", 7)(10, \"button\", 8);\n        i0.ɵɵlistener(\"click\", function ModalMinimapComponent_Template_button_click_10_listener() {\n          return ctx.close();\n        });\n        i0.ɵɵtext(11, \"Cancelar\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(12, \"button\", 9);\n        i0.ɵɵlistener(\"click\", function ModalMinimapComponent_Template_button_click_12_listener() {\n          return ctx.aceptar();\n        });\n        i0.ɵɵtext(13, \"Aceptar\");\n        i0.ɵɵelementEnd()();\n      }\n\n      if (rf & 2) {\n        i0.ɵɵadvance(4);\n        i0.ɵɵproperty(\"pins\", ctx.tour.pins)(\"selectedPin\", ctx.selectedPin)(\"img\", ctx.img)(\"place\", true);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngModel\", ctx.selected);\n        i0.ɵɵadvance(3);\n        i0.ɵɵproperty(\"ngForOf\", ctx.scenesAvailable);\n      }\n    },\n    directives: [i1.MatDialogTitle, i1.MatDialogContent, i2.CanvasMinimapaComponent, i3.SelectControlValueAccessor, i3.NgControlStatus, i3.NgModel, i3.NgSelectOption, i3.ɵNgSelectMultipleOption, i4.NgForOf, i1.MatDialogActions, i5.MatButton],\n    styles: [\"\"]\n  });\n  return ModalMinimapComponent;\n})();","map":null,"metadata":{},"sourceType":"module"}